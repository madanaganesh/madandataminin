boxplot(Age~Outcome, data=diabetes)
boxplot(BMI~Outcome, data=diabetes)
boxplot(Glucose~Outcome, data=diabetes)
boxplot(Insulin~Outcome, data=diabetes)
boxplot(Glucose~Outcome, data=diabetes)
boxplot(Age~Outcome, data=diabetes)
layout(mat = matrix(c(1,2), 2, 1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(diabetes$Age~Outcome, horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$Age~Outcome, col = "pink", freq = TRUE)
layout(mat = matrix(c(1,2), 2, 1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Age~Outcome,data=Outcome horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
boxplot(Age~Outcome,data=Outcome,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$Age~Outcome, col = "pink", freq = TRUE)
hist(Age~Outcome,data=diabetes, col = "pink", freq = TRUE)
hist(Age,data=diabetes, col = "pink", freq = TRUE)
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
qplot(diabetes$Age,diabetes$Pregnancies)
bar_plt <- bar_plt + geom_bar()
bar_plt
layout(mat = matrix(c(1,2), 2, 1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
qplot(diabetes$Age,diabetes$Pregnancies)
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
hist(Age,col = "pink", freq = TRUE)
layout(mat = matrix(c(1,2), 2, 1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
hist(Age,col = "pink", freq = TRUE)
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
hist(Age,col = "pink", freq = TRUE)
hist(diabetics$Age,col = "pink", freq = TRUE)
hist(diabetes$Age,col = "pink", freq = TRUE)
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
qplot(diabetes$Age,diabetes$Pregnancies)
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
layout(mat = matrix(c(1,2), 2, 1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =BMI, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =Glucose, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =Insulin, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =DBF, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =Pregnancies, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
boxplot(Pregnancies~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
par(mfrow=c(1,1))
boxplot(Pregnancies~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
scatter1=xyplot(diabetes$BMI ~ diabetes$SkinThickness, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
scatter1
library(caret)
library(randomForest)
library(e1071)
library(klaR)
library(e1071)
library(corrplot)
library(ggplot2)
library(hexbin)
library(slidify)
library(slidifyLibraries)
library(lattice)
xyplot(diabetes$BloodPressure ~ diabetes$BMI, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
xyplot(diabetes$BMI ~ diabetes$BloodPressure, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
xyplot(diabetes$Age ~ diabetes$Glucose, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
xyplot(diabetes$Glucose ~ diabetes$Age, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
xyplot(diabetes$Age ~ diabetes$Glucose, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
hist(diabetes$SkinThickness,col = "pink", freq = TRUE)
hist(diabetes$BloodPressure,col = "pink", freq = TRUE)
boxplot(Glucose~Outcome, data=diabetes)
boxplot(Age~Outcome, data=diabetes)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$Age, col = "blue", freq = FALSE)
lines(density(diabetes$Age), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(BMI~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$BMI, col = "blue", freq = FALSE)
lines(density(diabetes$BMI), col = "red", lwd = 2)
bar_plt <- ggplot(diabetes, aes(x =BloodPressure, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =Glucose, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =BloodPressure, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
bar_plt <- ggplot(diabetes, aes(x =DBF, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
plot7=hist(diabetes$Age, col = "blue", freq = FALSE)
plot7=lines(density(diabetes$Age), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
plot7=hist(diabetes$Age, col = "blue", freq = FALSE)
plot7=lines(density(diabetes$Age), col = "red", lwd = 2)
plot7
plot7={layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Age~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$Age, col = "blue", freq = FALSE)
lines(density(diabetes$Age), col = "red", lwd = 2)}
plot7
plot7
bar_plt <- ggplot(diabetes, aes(x =Age, fill=Outcome))
bar_plt <- bar_plt + geom_bar()
bar_plt
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")+hist(diabetes$Glucose, col = "blue", freq = FALSE)+lines(density(diabetes$Glucose), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
plot7= plot7+hist(diabetes$Glucose, col = "blue", freq = FALSE)+lines(density(diabetes$Glucose), col = "red", lwd = 2)
plot7
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
plot7= plot7+hist(diabetes$Glucose, col = "blue", freq = FALSE)+lines(density(diabetes$Glucose), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")+hist(diabetes$Glucose, col = "blue", freq = FALSE)+lines(density(diabetes$Glucose), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(BloodPressure~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$BloodPressure, col = "blue", freq = FALSE)
lines(density(diabetes$BloodPressure), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")+hist(diabetes$Glucose, col = "blue", freq = FALSE)+lines(density(diabetes$Glucose), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(BloodPressure~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$BloodPressure, col = "blue", freq = FALSE)
lines(density(diabetes$BloodPressure), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(BMI~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$BMI, col = "blue", freq = FALSE)
lines(density(diabetes$BMI), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(BloodPressure~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$BloodPressure, col = "blue", freq = FALSE)
lines(density(diabetes$BloodPressure), col = "red", lwd = 2)
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
plot7=boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")+hist(diabetes$Glucose, col = "blue", freq = FALSE)+lines(density(diabetes$Glucose), col = "red", lwd = 2)
plot7={layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(Glucose~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$Glucose, col = "blue", freq = FALSE)
lines(density(diabetes$Glucose), col = "red", lwd = 2)}
p <- ggplot(data = diabetes, aes(x = Age, y =BMI, group = Outcome, fill =))
p <- p + geom_bar(stat = "identity", width = 0.5, position = "dodge")
p <- p + theme_bw()
p <- p + theme(axis.text.x = element_text(angle = 90))
p
ggplot(diabetes, aes(x =diabetes$Outcome )) + geom_bar()
ggplot(data=diabetes)+geom_hex(mapping=aes(x=Insulin,y=))
library(hexbin)
ggplot(data=diabetes)+geom_hex(mapping=aes(x=Insulin,y=))
library("lattice", lib.loc="C:/Program Files/R/R-3.4.1/library")
elevation.fit
levelplot(Outcome ~ BMI*Age, data = diabetes,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data",
col.regions = terrain.colors(100)
levelplot(Outcome ~ BMI*Age, data = diabetes,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data",
col.regions = terrain.colors(100))
levelplot(Outcome ~ BMI*Age, data = diabetes,xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",main = "Surface elevation data",col.regions = terrain.colors(100))
ggplot(diabetes, aes(diabetes$Age, diabetes$BMI, fill = diabetes$Outcome)) + geom_tile()+xlab("X Coordinate (feet)") + ylab("Y Coordinate (feet)")+opts(title = "Surface elevation data")+scale_fill_gradient(limits = c(0, 1), low = "black", high = "white") +scale_x_continuous(expand = c(0,0))+scale_y_continuous(expand = c(0,0))
library(ggplot2)
ggplot(diabetes, aes(diabetes$Age, diabetes$BMI, fill = diabetes$Outcome)) + geom_tile()+xlab("X Coordinate (feet)") + ylab("Y Coordinate (feet)")+opts(title = "Surface elevation data")+scale_fill_gradient(limits = c(0, 1), low = "black", high = "white") +scale_x_continuous(expand = c(0,0))+scale_y_continuous(expand = c(0,0))
ggplot(diabetes, aes(diabetes$Age, diabetes$BMI, fill = diabetes$Outcome)) + geom_tile()+xlab("X Coordinate (feet)") + ylab("Y Coordinate (feet)")
x=diabetes2$Age
library("plotly", lib.loc="~/R/win-library/3.4")
diabetes2<- read.csv("C:/Users/Madan/Documents/diabetes2.csv",header=TRUE, stringsAsFactors = TRUE)
x=diabetes2$Age
y=diabetes2$BMI
z=diabetes2$Outcome
df <- data.frame(x=x,y=y,z=z)
library(plotly)
p <- plot_ly(data = df, x=~x,y=~y, z=~z, type = "contour", colorscale='Jet')
p
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("gplots", lib.loc="~/R/win-library/3.4")
library("corrplot", lib.loc="~/R/win-library/3.4")
library("rpart.plot", lib.loc="~/R/win-library/3.4")
p <- plot_ly(data = df, x=~x,y=~y, z=~z, type = "contour", colorscale='Jet')
p
x=c(1,1,1,2,2,2,3,3,3)
y=c(0,10,20,0,10,20,0,10,20)
z=c(900,800,700,600,500,400,300,200,100)
df <- data.frame(x=x,y=y,z=z)
library(plotly)
p <- plot_ly(data = df, x=~x,y=~y, z=~z, type = "contour", colorscale='Jet')
p
d <- ggplot(diamonds, aes(carat, price))
d + geom_hex()
d <- ggplot(diabetes, aes(Age,BMI))
d + geom_hex()
d <- ggplot(diabetes, aes(Age,Pregnancies))
d + geom_hex()
d <- ggplot(diabetes, aes(Age,Glucose))
d + geom_hex()
filled.contour(x = seq(0, 1, length.out = nrow(z)),
y = seq(0, 1, length.out = ncol(z)),
z,
xlim = range(x, finite = TRUE),
ylim = range(y, finite = TRUE),
zlim = range(z, finite = TRUE),
levels = pretty(zlim, nlevels), nlevels = 20,
color.palette = cm.colors,
col = color.palette(length(levels) - 1),
plot.title, plot.axes, key.title, key.axes,
asp = NA, xaxs = "i", yaxs = "i", las = 1,
axes = TRUE, frame.plot = axes)
contour(volcano,  main = "Topographic map of a Volcano",col = "blue")
filled.contour(volcano, color.palette = terrain.colors,main = "Topographic map of a Volcano")
filled.contour(diabetes, color.palette = terrain.colors,main = "Topographic map of a Volcano")
v <- ggplot(diabetes2, aes(Age,BMI, z = Outcome))
v + geom_contour()
v + geom_raster(aes(fill = density)) +geom_contour(colour = "white")
v <- ggplot(diabetes2, aes(Age,BMI, z = Outcome))
v
v + geom_contour()
v + geom_raster(aes(fill = density)) +geom_contour(colour = "white")
v <- ggplot(diabetes2, aes(Age,BMI, z = Outcome))
v + geom_raster(aes(fill = density)) +geom_contour(colour = "white")
require(MASS)
x <- rnorm(50)
y <- rnorm(50)
d <- kde2d(x,y)
image(d,col=terrain.colors(50))
contour(d,add=T)
filled.contour2 = function (x = seq(0, 1, length.out = nrow(z)), y = seq(0, 1,
length.out = ncol(z)), z, xlim = range(x, finite = TRUE),
ylim = range(y, finite = TRUE), zlim = range(z, finite = TRUE),
levels = pretty(zlim, nlevels), nlevels = 20, color.palette = cm.colors,
col = color.palette(length(levels) - 1), plot.title, plot.axes,
key.title, key.axes, asp = NA, xaxs = "i", yaxs = "i", las = 1,
key.extend = FALSE,
axes = TRUE, frame.plot = axes, ...)
{
if (missing(z)) {
if (!missing(x)) {
if (is.list(x)) {
z <- x$z
y <- x$y
x <- x$x
}
else {
z <- x
x <- seq.int(0, 1, length.out = nrow(z))
}
}
else stop("no 'z' matrix specified")
}
else if (is.list(x)) {
y <- x$y
x <- x$x
}
if (any(diff(x) <= 0) || any(diff(y) <= 0))
stop("increasing 'x' and 'y' values expected")
mar.orig <- (par.orig <- par(c("mar", "las", "mfrow")))$mar
on.exit(par(par.orig))
w <- (3 + mar.orig[2L]) * par("csi") * 2.54
w <- lcm(w * ifelse(key.extend, 0.9, 1.0))
layout(matrix(c(2, 1), ncol = 2L), widths = c(1, w))
par(las = las)
mar <- mar.orig
mar[4L] <- mar[2L]
mar[2L] <- 1
par(mar = mar)
plot.new()
plot.window(xlim = c(0, 1), ylim = range(levels), xaxs = "i",
yaxs = "i")
if (key.extend) {
# expand levels by one step above and below
dl <- diff(levels[1:2])   # level to level distance
# draw key-color rectangles but skip the first and last level
last <- length(levels)
xi <- 0
xa <- 1
rect(xi, levels[2:(last-2)],
xa, levels[3:(last-1)],
col = col[2:(length(col)-1)])
# allow drawing triangles into the margins
apex <- 1.0   # apex height as factor of dl
kbh <- 1.0    # height of rectangular part of polygon
# as factor of dl. kbh <- 0 draws the polygon
# as a triangle.
clipmax <- apex + (0.05*apex)  # add fudge factor 5%
# to account for line width
clip(xi,xa, levels[1]-(dl*clipmax), levels[last]+(dl*clipmax))
# draw the range extension polygons
polygon(c(xi,xi,xa,xa,xa/2),
c(levels[2]-(dl*kbh), levels[2], levels[2],
levels[2]-(dl*kbh), levels[1]-(dl*apex)),
col = col[1])
polygon(c(xi,xi,xa,xa,xa/2),
c(levels[last-1]+(dl*kbh), levels[last-1], levels[last-1],
levels[last-1]+(dl*kbh), levels[last]+(dl*apex)),
col = col[length(col)])
}
else {
rect(0, levels[-length(levels)], 1, levels[-1L], col = col)
}
if (missing(key.axes) && axes) {
if (key.extend) {axis(4, lwd = 0, lwd.tick=1)}
else {axis(4)}
}
else key.axes
if (key.extend) {
clip(xi,xa, levels[1]-(dl*apex), levels[last]+(dl* apex))
polygon(c(xi,xa/2,xa,xa,xa/2,xi),
c(levels[2]-(dl*kbh),
levels[1]-(dl*apex),
levels[2]-(dl*kbh),
levels[last-1]+(dl*kbh),
levels[last]+(dl*apex),
levels[last-1]+(dl*kbh) ),
lwd = 1.1 )
}
else {
box()
}
if (!missing(key.title))
key.title
mar <- mar.orig
mar[4L] <- 1
par(mar = mar)
plot.new()
plot.window(xlim, ylim, "", xaxs = xaxs, yaxs = yaxs, asp = asp)
.filled.contour(x, y, z, levels, col)
if (missing(plot.axes)) {
if (axes) {
title(main = "", xlab = "", ylab = "")
Axis(x, side = 1)
Axis(y, side = 2)
}
}
else plot.axes
if (frame.plot)
box()
if (missing(plot.title))
title(...)
else plot.title
invisible()
}
filled.contour2
filled.contour2
plot3 <- ggplot() +
geom_tile(data = mtrx.melt, aes(wt, hp, qsec, fill = equalSpace)) +
geom_contour(color = “white”, alpha = 0.5) +
theme_bw() +
xlab(“Weight (1,000lbs)”) +
ylab(“Horsepower”) +
scale_fill_manual(values = c(“#35978f”, “#80cdc1”, “#c7eae5”, “#f5f5f5”,
“#f6e8c3”, “#dfc27d”, “#bf812d”, “#8c510a”,
“#543005”, “#330000”),
name = “¼ Mi. Time (s)”, breaks = breaks, labels = breaks)
mtrx.melt$equalSpace <- cut(mtrx.melt$qsec, 10)
mtrx.melt <- melt(mtrx3d, id.vars = c(“wt”, “hp”), measure.vars = “qsec”)
names(mtrx.melt) <- c(“wt”, “hp”, “qsec”)
mtrx.melt$hp <- as.numeric(str_sub(mtrx.melt$hp, str_locate(mtrx.melt$hp, “=”)[1,1] + 1))
mtrx.melt$wt <- as.numeric(str_sub(mtrx.melt$wt, str_locate(mtrx.melt$wt, “=”)[1,1] + 1))
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
filled.contour(cos(r^2)*exp(-r/(2*pi)), axes = FALSE)
## rather, the key *should* be labeled:
filled.contour(cos(r^2)*exp(-r/(2*pi)), frame.plot = FALSE, plot.axes = {})
a <- expand.grid(1:20, 1:20)
b <- matrix(a[,1] + a[,2], 20)
filled.contour(x = 1:20, y = 1:20, z = b,
plot.axes={ axis(1); axis(2); points(10,10) })
x <- 10*1:nrow(volcano)
y <- 10*1:ncol(volcano)
filled.contour(x, y, volcano, color = terrain.colors,
plot.title = title(main = "The Topography of Maunga Whau",
xlab = "Meters North", ylab = "Meters West"),
plot.axes = { axis(1, seq(100, 800, by = 100))
axis(2, seq(100, 600, by = 100)) },
key.title = title(main="Height\n(meters)"),
key.axes = axis(4, seq(90, 190, by = 10)))# maybe also asp=1
mtext(paste("filled.contour(.) from", R.version.string),
side = 1, line = 4, adj = 1, cex = .66)
a <-diabetes2$BMI
b <- diabetes2$Age
filled.contour(x =a, y =b, z =diabetes2$Outcome,
plot.axes={ axis(1); axis(2); points(10,10) })
a <-diabetes2$BMI
b <- diabetes2$Age
filled.contour(x =a, y =b, z =diabetes2$Outcome,plot.axes={ axis(1); axis(2); points(10,10) })
library(plotly)
x=diabetes2$Age
y=diabetes2$Glucose
z=diabetes2$Outcome
df <- data.frame(x=x,y=y,z=z)
p <- plot_ly(data = df, x=~x,y=~y, z=~z, type = "contour")
p
library(caret)
library(randomForest)
library(e1071)
library(klaR)
library(e1071)
library(corrplot)
library(ggplot2)
library(hexbin)
library(slidify)
library(slidifyLibraries)
library(lattice)
x=diabetes2$Age
y=diabetes2$Glucose
z=diabetes2$Outcome
df <- data.frame(x=x,y=y,z=z)
library(plotly)
p <- plot_ly(data = df, x=~x,y=~y, z=~z, type = "contour")
p
library("caret", lib.loc="~/R/win-library/3.4")
library("corrplot", lib.loc="~/R/win-library/3.4")
library("crayon", lib.loc="~/R/win-library/3.4")
library("crossval", lib.loc="~/R/win-library/3.4")
library("Cubist", lib.loc="~/R/win-library/3.4")
library("devtools", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("e1071", lib.loc="~/R/win-library/3.4")
library("gbm", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("git2r", lib.loc="~/R/win-library/3.4")
library("glmnet", lib.loc="~/R/win-library/3.4")
library("h2o", lib.loc="~/R/win-library/3.4")
library("hexbin", lib.loc="~/R/win-library/3.4")
library("klaR", lib.loc="~/R/win-library/3.4")
library("MASS", lib.loc="~/R/win-library/3.4")
library("mlbench", lib.loc="~/R/win-library/3.4")
library("phantom", lib.loc="~/R/win-library/3.4")
library("plyr", lib.loc="~/R/win-library/3.4")
library("psych", lib.loc="~/R/win-library/3.4")
library("randomForest", lib.loc="~/R/win-library/3.4")
library("RColorBrewer", lib.loc="~/R/win-library/3.4")
library("slidify", lib.loc="~/R/win-library/3.4")
library("slidifyLibraries", lib.loc="~/R/win-library/3.4")
library("shiny", lib.loc="~/R/win-library/3.4")
library("lattice", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.4.1/library")
x=diabetes2$Age
y=diabetes2$Glucose
z=diabetes2$Outcome
df <- data.frame(x=x,y=y,z=z)
p <- plot_ly(data = df, x=~x,y=~y, z=~z, type = "contour")
p
library(plotly)
p <- plot_ly(
type = 'contour',
z = matrix(c(10, 10.625, 12.5, 15.625, 20, 5.625, 6.25, 8.125,
11.25, 15.625, 2.5, 3.125, 5, 8.125, 12.5, 0.625,
1.25, 3.125, 6.25, 10.625, 0, 0.625, 2.5, 5.625,
10), nrow=5, ncol=5),
contours = list(
coloring = 'heatmap'
)
)
p <- plot_ly(type = 'contour',z = matrix(c(10, 10.625, 12.5, 15.625, 20, 5.625, 6.25, 8.125,11.25, 15.625, 2.5, 3.125, 5, 8.125, 12.5, 0.625,1.25, 3.125, 6.25, 10.625, 0, 0.625, 2.5, 5.625,10), nrow=5, ncol=5),contours = list(coloring = 'heatmap'))
p
p <- plot_ly(z = ~volcano, type = "contour")
p
p <- plot_ly(z = ~volcano, type = "contour")
scatter1=xyplot(diabetes$Age ~ diabetes$Pregnancies, groups=diabetes$Outcome, data = diabetes,auto.key = list(corner = c(0, .98)), cex = .75)
d <- ggplot(diabetes, aes(Pregnancies,Age))
d + geom_hex()+scatter1
layout(matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,3))
par(mar=c(2, 2, 0.5, 1))
boxplot(BloodPressure~Outcome,data=diabetes,horizontal=TRUE,  outline=TRUE, frame=FALSE, col = "green1")
hist(diabetes$BloodPressure, col = "blue", freq = FALSE)
lines(density(diabetes$BloodPressure), col = "red", lwd = 2)
